#@ load("@ytt:data", "data")
---
profile: build
ceip_policy_disclosed: true # Installation fails if this is set to 'false'

shared:
  ingress_domain: #@ data.values.tap.view.ingress.domain
  image_registry:
    # To be used by Build Service by appending "/buildservice" and used by Supply chain by appending "/workloads".
    project_path: #@ "{}/{}".format(data.values.tap.developer.registry.hostname,data.values.tap.developer.registry.project)
    username: #@ data.values.tap.developer.registry.username
    password: #@ data.values.tap.developer.registry.password

buildservice:
  tanzunet_username: #@ data.values.tap.registry.username
  tanzunet_password: #@ data.values.tap.registry.password
  enable_automatic_dependency_updates: true
  descriptor_name: full

supply_chain: testing_scanning

ootb_supply_chain_testing_scanning:
  gitops:
    ssh_secret: "git-secret"
    server_address: #@ data.values.gitops_repository.server_address
    repository_owner: #@ data.values.gitops_repository.owner
    repository_name: gitops
    branch: main
    commit_strategy: pull_request
    pull_request:
      commit_branch: ""
      server_kind: #@ data.values.gitops_repository.type
      pull_request_title: Change ready for review
      pull_request_body: Generated by the TAP supply chain
scanning:
  metadataStore:
    url: ""
grype:
  namespace: #@ data.values.tap.developer.namespace
  targetImagePullSecret: dev-registry
  metadataStore:
    url: #@ "https://metadata-store.{}".format(data.values.tap.view.ingress.domain)
    authSecret:
      name: store-auth-token
      importFromNamespace: metadata-store-secrets
    caSecret:
      name: store-ca-cert
      importFromNamespace: metadata-store-secrets